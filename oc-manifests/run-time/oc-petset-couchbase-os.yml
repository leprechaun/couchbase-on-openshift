kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: couchbase-os
  labels:
    app: couchbase-os
spec:
  # pets get DNS/hostnames that follow the pattern: ${metadata.name}-NUM.${spec.serviceName}.default.svc.cluster.local
  serviceName: "couchbase-os"
  replicas: 1
  # describes the pod that will be created if insufficient replicas are detected
  template:
    metadata:
      # this label will be used for count running pods
      labels:
        name: "couchbase-os"
    spec:
      containers:
        - name: couchbase
          image: 172.30.1.1:5000/test-project/leprechaun-couchbase-os
          ports:
            - containerPort: 8091
          args:
            - "couchbase-server"
          volumeMounts:
            - name: couchbase-data
              mountPath: "/opt/couchbase/var/lib/couchbase/"
          env:
            - name: USERNAME
              value: "administrator"
            - name: PASSWORD
              value: "guessme"
        - name: bootstrap
          image: >-
            172.30.1.1:5000/test-project/leprechaun-couchbase-os
          args:
          - bootstrap
          volumeMounts:
            - mountPath: /opt/couchbase/var/lib/couchbase/
              name: couchbase-data
          env:
            - name: USERNAME
              value: administrator
            - name: PASSWORD
              value: guessme

  volumeClaimTemplates:
    - metadata:
        name: couchbase-data
        annotations:
          # Uncomment this if using dynamic volume provisioning.
          # https://docs.openshift.org/latest/install_config/persistent_storage/dynamically_provisioning_pvs.html
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        # the volume can be mounted as read-write by a single node
        accessModes: [ ReadWriteOnce ]
        resources:
            requests:
              storage: "2Gi"
